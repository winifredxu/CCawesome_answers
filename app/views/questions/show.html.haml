%h1.class{style:"display: inline-block"} Example for h1 class in HTML

%h1= @question.title
%p= @question.body
%p Created by: #{@question.user_first_name}
%p View count: #{@question.view_count}

= link_to "Edit question", edit_question_path(@question) 
= link_to "Delete question", 	question_path(@question), 
	method: :delete, 	data: {confirm: "are you sure?"} 

%hr

%h2 Create an answer
= render "answers/form"  
/ refactor answer form into answer's view folder partial form

%h2 Answers 
/ loop through answers list and print them all
- @question.answers.each do |answer| 
	= answer.body  
	%p Answer by: = answer.user_first_name
	= link_to "Delete", question_answer_path(@question.id, answer.id), method: "delete", data: {confirm: "delete this answer for real?"}, class: "btn btn-sm btn-danger"  
	/ button_to "Delete", question_answer_path(@question.id, answer.id), method: :delete, data: {confirm: "delete this answer for real?"}, class: "btn btn-sm btn-danger" 

	/ @comment || Comment.new    so we don't have to insert Comment.new in both Questions and Answers controller page.
	= form_for [answer, @comment || Comment.new] do |f| 
		.form-group
		= f.text_area :body, class: "form-control", placeholder: "Enter a comment", rows: 1 
		= f.submit class: "btn btn-info btn-sm" 

	%hr
	- answer.comments.each do |comment| 
		.well
		= comment.body   
		= " | Comment by: #{comment.user_first_name}  "  
		= link_to "Delete comment", answer_comment_path(answer.id, comment.id), method: :delete, data: {confirm: "delete this comment for real?"}, class: "btn btn-sm btn-danger"